{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "baseName": {
            "type": "string",
            "defaultValue": "azsec",
            "metadata": {
                "description": "Base name"
            }
        },
        "storageAccountType": {
            "type": "string",
            "defaultValue": "Standard_LRS",
            "allowedValues": [
                "Standard_LRS",
                "Standard_GRS",
                "Standard_ZRS",
                "Premium_LRS"
            ],
            "metadata": {
                "description": "Storage Account Type"
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources"
            }
        }
    },
    "variables": {
        "storageAccountName": "[concat(parameters('baseName'), uniqueString(resourceGroup().id))]",
        "vmName": "[concat(parameters('baseName'), '-', 'vm1', '-vm')]",
        "vnetName": "[concat(parameters('baseName'), '-vnet')]",
        "vnetAddressPrexix": "10.0.0.0/16",
        "subnetName": "[concat(variables('vmName'), '-subnet')]",
        "subnetPrefix": "10.0.0.0/24",
        "vmNicName": "[concat(variables('vnetName'), '-nic')]",
        "pipVmName": "[concat(variables('vmName'), '-pip')]",
        "nsgName": "[concat(variables('vmName'),'-nsg')]",
        "vmSize": "Standard_B2S",
        "vmPublisher": "Canonical",
        "vmOffer": "UbuntuServer",
        "vmOsVersion": "18.04-LTS",
        "adminUserName": "azsec",
        "adminPassword": "useYourOwnPassword@1234"
    },
    "resources": [
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2020-05-01",
            "name": "[variables('vnetName')]",
            "location": "[parameters('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('vnetAddressPrexix')]"
                    ]
                }
            },
            "resources": [
                {
                    "type": "subnets",
                    "apiVersion": "2020-05-01",
                    "location": "[parameters('location')]",
                    "name": "[variables('subnetName')]",
                    "dependsOn": [
                        "[variables('vnetName')]"
                    ],
                    "properties": {
                        "addressPrefix": "[variables('subnetPrefix')]",
                        "serviceEndpoints": [
                            {
                                "service": "Microsoft.Storage",
                                "locations": "[parameters('location')]"
                            }
                        ]
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Network/publicIpAddresses",
            "apiVersion": "2020-05-01",
            "name": "[variables('pipVmName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Basic"
            },
            "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "publicIPAddressVersion": "IPv4",
                "idleTimeoutInMinutes": 4
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-05-01",
            "location": "[parameters('location')]",
            "name": "[variables('vmNicName')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIpAddresses', variables('pipVmName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('subnetName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets',variables('vnetName'),variables('subnetName'))]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIpAddresses',variables('pipVmName'))]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('nsgName'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2020-05-01",
            "name": "[variables('nsgName')]",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "SSH",
                        "properties": {
                            "priority": 1000,
                            "protocol": "Tcp",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "22"
                        }
                    }
                ]
            }
        },
        {
            "comments": "Create virtual 1",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2019-07-01",
            "name": "[variables('vmName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', variables('vmNicName'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[variables('vmSize')]"
                },
                "storageProfile": {
                    "osDisk": {
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "Premium_LRS"
                        }
                    },
                    "imageReference": {
                        "publisher": "[variables('vmPublisher')]",
                        "offer": "[variables('vmOffer')]",
                        "sku": "[variables('vmOsVersion')]",
                        "version": "latest"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('vmNicName'))]"
                        }
                    ]
                },
                "osProfile": {
                    "computerName": "[parameters('baseName')]",
                    "adminUsername": "[variables('adminUserName')]",
                    "adminPassword": "[variables('adminPassword')]"
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2021-02-01",
            "name": "[variables('storageAccountName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('subnetName'))]"
            ],
            "sku": {
                "name": "[parameters('storageAccountType')]"
            },
            "kind": "StorageV2",
            "properties": {
                "networkAcls": {
                    "virtualNetworkRules": [
                        {
                            "action": "Allow",
                            "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('subnetName'))]"
                        }
                    ],
                    "defaultAction": "Deny"
                }
            }
        }
    ],
    "outputs": {
        "storageAccountName": {
            "type": "string",
            "value": "[variables('storageAccountName')]"
        }
    }
}